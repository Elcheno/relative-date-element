const t=900,e=53100,s=3132900,a=72056700,n=432340200,r=1e3,i=60,l=60,o=24,h=7;class _ extends HTMLElement{static observedAttributes=["date","loop","lang"];static _lang=null;async _loadTranslations(t){return await fetch(`lang/${t}.json`).then((t=>t.json())).then((t=>t))}_formatString(t,e){return t.replace(/{(\w+)}/g,((t,s)=>e[s]||""))}_getTranslation(t,e){const s=t.slice(0,-1);return 1===e?this._lang[s]:this._lang[t]}_getSeconds(t){return Math.round(t/r)}_getMinutes(t){return Math.round(t/r/i)}_getHours(t){return Math.round(t/r/i/l)}_getDays(t){return Math.round(t/r/i/l/o)}_getWeeks(t){return Math.round(t/r/i/l/o/h)}_isNow(){return this._formatString(this._lang.now,{})}_afterSeconds(t){let e=this._getSeconds(t),s=null;return e>0?s=this._getTranslation("seconds",e):(e*=-1,s=this._getTranslation("afterSeconds",e)),this._formatString(s,{value:e})}_afterMinutes(t){let e=this._getMinutes(t),s=null;return e>0?s=this._getTranslation("minutes",e):(e*=-1,s=this._getTranslation("afterMinutes",e)),this._formatString(s,{value:e})}_afterHours(t){let e=this._getHours(t),s=null;return e>0?s=this._getTranslation("hours",e):(e*=-1,s=this._getTranslation("afterHours",e)),this._formatString(s,{value:e})}_afterDays(t){let e=this._getDays(t),s=null;return e>0?s=this._getTranslation("days",e):(e*=-1,s=this._getTranslation("afterDays",e)),this._formatString(s,{value:e})}_afterWeeks(t){let e=this._getWeeks(t),s=null;return e>0?s=this._getTranslation("weeks",e):(e*=-1,s=this._getTranslation("afterWeeks",e)),this._formatString(s,{value:e})}_handlerDate(r){if(!this._lang)return"";const i=new Date(r),l=new Date-i;return l<0?l>-900?(console.log("flag"),this._isNow(l)):l>-53100?this._afterSeconds(l):l>-3132900?this._afterMinutes(l):l>-a?this._afterHours(l):l>-n?this._afterDays(l):this._afterWeeks(l):l<t?this._isNow(l):l<e?this._afterSeconds(l):l<s?this._afterMinutes(l):l<a?this._afterHours(l):l<n?this._afterDays(l):this._afterWeeks(l)}_setValueDate(){const t=this.getAttribute("date");this.getAttributeNames().includes("loop")&&setInterval((()=>{const e=this._handlerDate(t);this.innerHTML=e}),1e3);const e=this._handlerDate(t);this.innerHTML=e}async connectedCallback(){const t=this.getAttribute("lang")??"en";this._lang=await this._loadTranslations(t),this._setValueDate()}async attributeChangedCallback(t,e,s){if("lang"===t){const t=this.getAttribute("lang")??"en";this._lang=await this._loadTranslations(t),this._setValueDate()}else if("date"===t){const t=this._handlerDate(s);this.innerHTML=t}}}customElements.define("relative-date-element",_);
